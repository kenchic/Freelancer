@using GrupoXpert.Authentication
@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar Elevation="1" Style="@($"background:{Colors.Yellow.Darken4};")">
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Edge="Edge.Start" Color="Color.Inherit" OnClick="@ToggleDrawer" />
                <MudSpacer />
                <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/MudBlazor/MudBlazor" Target="_blank" />
            </MudAppBar>

            <MudDrawer @bind-Open="@abrirMenu"
                       Elevation="1"
                       Style="@($"background-image: linear-gradient(to bottom, {Colors.Yellow.Darken4}, {Colors.Yellow.Darken3}, {Colors.Yellow.Darken2}, {Colors.Yellow.Darken1});")">
                <MudDrawerHeader>
                    <MudText Typo="Typo.h5">Coin Control</MudText>
                </MudDrawerHeader>
                <MudNavMenu Class="">
                    <MudNavLink Match="NavLinkMatch.All" Href="" Icon="@Icons.Material.Filled.Home">Inicio</MudNavLink>
                    <MudNavLink Match="NavLinkMatch.All" Href="counter" Icon="@Icons.Material.Filled.Countertops">Counter</MudNavLink>
                    <MudNavLink Match="NavLinkMatch.All" Href="weather" Icon="@Icons.Material.Filled.WebAsset">Weather</MudNavLink>
                    <MudNavLink Match="NavLinkMatch.All" OnClick="@OnLogout" Icon="@Icons.Material.Filled.Logout">Salir</MudNavLink>
                </MudNavMenu>
            </MudDrawer>

            <MudMainContent Class="pt-16 px-16">
                <MudContainer Class="mt-6">
                    <MudAlert Severity="Severity.Success" Class="mt-16">
                        @Body
                    </MudAlert>
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        <Autenticar OnAutenticar="@OnAutenticar" />
    </NotAuthorized>
</AuthorizeView>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    [Inject]
    private AuthenticationStateProvider? AuthenticationStateProvider { get; set; }

    [Inject]
    private NavigationManager NavManager { get; set; }

    bool abrirMenu = true;

    private async Task OnAutenticar(AutenticarEventArgs e)
    {
        if ((e.Usuario.ToUpper() == "ADMIN") && e.Clave == "123")
        {
            Credencial credencial = new Credencial(e.Usuario, e.Clave);
            await ((CustomAuthenticationStateProvider)AuthenticationStateProvider!).UpdateAuthenticationState(credencial);
            NavManager.NavigateTo("/", true);
        }
    }
    
    private void ToggleDrawer()
    {
        abrirMenu = !abrirMenu;
    }

    private async Task OnLogout()
    {
        await ((CustomAuthenticationStateProvider)AuthenticationStateProvider!).UpdateAuthenticationState(null);
    }
}